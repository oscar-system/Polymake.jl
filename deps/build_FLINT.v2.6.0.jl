using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libflint"], :libflint),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/FLINT_jll.jl/releases/download/FLINT-v2.6.0+0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FLINT.v2.6.0.aarch64-linux-gnu.tar.gz", "5b14f4c383488c116c2a1755d90bba2c8d73b40efc51e0f0594e5e28dad6a0ee"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FLINT.v2.6.0.aarch64-linux-musl.tar.gz", "ebeba3bf7a9e6007cdb2cc0d5f8f43e5dbd0ba51e0a5b8ae550e1c7364a280c8"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FLINT.v2.6.0.armv7l-linux-gnueabihf.tar.gz", "d506142b9a4744e6e8ea8279c6097d7d8ccceb99a830d82d84f140d7fe4dc574"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FLINT.v2.6.0.armv7l-linux-musleabihf.tar.gz", "07308f6bf6db8d3c7e7be043217985e751441df57baf14702ae00ab074499fc0"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FLINT.v2.6.0.i686-linux-gnu.tar.gz", "d92b523d17e68890f512f90709918dec6a42ff048f511eefefd726283156b8b9"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FLINT.v2.6.0.i686-linux-musl.tar.gz", "024ed3f104a92b34629f36d9bb9ca10c8e75e2a129df3974ea6ef14c94b3c438"),
    Windows(:i686) => ("$bin_prefix/FLINT.v2.6.0.i686-w64-mingw32.tar.gz", "21b57a6458e3398cb132d1989819387132553235d95567942eda95a395a85c6a"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FLINT.v2.6.0.powerpc64le-linux-gnu.tar.gz", "b6d37bc7ba18a171f7b56a8c5c2eb857c32cf76827cf540446e8f086ec9392cb"),
    MacOS(:x86_64) => ("$bin_prefix/FLINT.v2.6.0.x86_64-apple-darwin14.tar.gz", "0e39a384e45f82bed87f3b472e768a17ade4a5773770c3359b38854e974542d6"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FLINT.v2.6.0.x86_64-linux-gnu.tar.gz", "8137bd0cf4b0fd3808b2d4bc574c005a40275a272ce4e64fc5ee1a1855ae2fae"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FLINT.v2.6.0.x86_64-linux-musl.tar.gz", "dd63d941088ef5232207f6cfd2cf02f1003b969ec78c5b4e85ee32578087d273"),
    FreeBSD(:x86_64) => ("$bin_prefix/FLINT.v2.6.0.x86_64-unknown-freebsd11.1.tar.gz", "19820b1fed197923d9d152df213fc76cca8b38f73a999391653c97d8d4327ea1"),
    Windows(:x86_64) => ("$bin_prefix/FLINT.v2.6.0.x86_64-w64-mingw32.tar.gz", "9ccf3eb9b8ee8d2cfcd501e9e44273ee25a6cd0e903daf3fc2861eb9ab831a12"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
